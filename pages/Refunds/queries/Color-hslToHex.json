{
  "pluginType": "JS",
  "pluginId": "js-plugin",
  "unpublishedAction": {
    "name": "hslToHex",
    "fullyQualifiedName": "Color.hslToHex",
    "datasource": {
      "name": "UNUSED_DATASOURCE",
      "pluginId": "js-plugin",
      "messages": [],
      "isAutoGenerated": false,
      "deleted": false,
      "policies": [],
      "userPermissions": []
    },
    "pageId": "Refunds",
    "collectionId": "Refunds_Color",
    "actionConfiguration": {
      "timeoutInMillisecond": 10000,
      "paginationType": "NONE",
      "encodeParamsToggle": true,
      "body": "hslColor => {\n  var h = hslColor[0], s = hslColor[1], l = hslColor[2];\n  var r, g, b;\n  if (s == 0) {\n    r = g = b = l;\n  } else {\n    function hue2rgb(p, q, t) {\n      if (t < 0) t += 1;\n      if (t > 1) t -= 1;\n      if (t < 1 / 6) return p + (q - p) * 6 * t;\n      if (t < 1 / 2) return q;\n      if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n      return p;\n    }\n    var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n    var p = 2 * l - q;\n    r = hue2rgb(p, q, h + 1 / 3);\n    g = hue2rgb(p, q, h);\n    b = hue2rgb(p, q, h - 1 / 3);\n  }\n  var rgbColor = [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\n  var outputColor = '#' + rgbColor.map(c => c.toString(16).padStart(2, '0')).join('');\n  return outputColor;\n}",
      "selfReferencingDataPaths": [],
      "jsArguments": [],
      "isAsync": false
    },
    "executeOnLoad": false,
    "dynamicBindingPathList": [
      {
        "key": "body"
      }
    ],
    "isValid": true,
    "invalids": [],
    "messages": [],
    "jsonPathKeys": [
      "hslColor => {\n  var h = hslColor[0], s = hslColor[1], l = hslColor[2];\n  var r, g, b;\n  if (s == 0) {\n    r = g = b = l;\n  } else {\n    function hue2rgb(p, q, t) {\n      if (t < 0) t += 1;\n      if (t > 1) t -= 1;\n      if (t < 1 / 6) return p + (q - p) * 6 * t;\n      if (t < 1 / 2) return q;\n      if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n      return p;\n    }\n    var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n    var p = 2 * l - q;\n    r = hue2rgb(p, q, h + 1 / 3);\n    g = hue2rgb(p, q, h);\n    b = hue2rgb(p, q, h - 1 / 3);\n  }\n  var rgbColor = [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\n  var outputColor = '#' + rgbColor.map(c => c.toString(16).padStart(2, '0')).join('');\n  return outputColor;\n}"
    ],
    "userSetOnLoad": false,
    "confirmBeforeExecute": false,
    "policies": [],
    "userPermissions": []
  },
  "id": "Refunds_Color.hslToHex",
  "deleted": false,
  "gitSyncId": "63e8d02d1e242279f5911ffe_63fdfe0214130d22285c01e9"
}